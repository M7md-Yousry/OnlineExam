@model IEnumerable<OnlineExam.Models.Exams>

@{
    ViewData["Title"] = "Question";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
    rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
    crossorigin="anonymous" />
    <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
    integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer" />
        <title>Questions</title>
    <style>
        * {
        padding: 0;
        margin: 0;
        box-sizing: content-box;
        }
        body {
        background: rgb(236, 235, 238);
        background: linear-gradient(
            90deg,
            rgba(236, 235, 238, 1) 0%,
            rgb(255, 255, 255) 0%,
            rgb(75, 63, 247) 50%
        );
        }
        .navbar span {
        color: rgb(9, 1, 125);
        font-weight: bolder;
        font-size: larger;
        }
        .navbar a {
        text-decoration: none;
        color: rgb(9, 1, 125);
        }
        h1 {
        font-family: Georgia, "Times New Roman", Times, serif;
        font-weight: bolder;
        margin-left: 5rem;
        text-decoration: underline;
        }
        .questions{
        margin: 1rem 0 0 3rem;
        color: rgb(9, 1, 125);
        font-size: x-large;
        font-weight: bolder;
        }
        .answers{
        margin: 0 0 0 4rem;
        color: black;
        font-weight: bolder;
        }
        .btn {
        color: white;
        background-color: green;
        font-size: large;
        font-weight: bold;
        border-radius: 2rem;
        border-width: 5px;
        border-color: #ffffff;
        margin: 2rem 0 0 2rem;
        }
        .btn{
            min-width: 10rem;
        }
        .button{
            margin-left: 60%;
        }
        .button :hover{
            color: white;
            background-color: green;
        }
    </style>
</head>
    <nav class="navbar bg-body-tertiary">
    <div class="container-fluid">
    <a class="navbar-brand">
        <img
        src="~/images/Qnb.png"
        alt="QNB"
        height="24"
        class="d-inline-block align-text-top" />
    </a>
    <span>USER</span>
    <a asp-action="Logout"><i class="fa-solid fa-right-from-bracket"></i></a>
    </div>
</nav>
<h1>Questions</h1> 

<form class="needs-validation quiz-form" asp-action="ShowAnswer">
@foreach (var item in Model) {
    <div class="questions">
    @Html.DisplayFor(modelItem => item.Question)
    </div>
    <div class="answers">
<div class="form-check1">
    <input onclick="clickedradio()" class="form-check-input" type="radio" name="@item.Question" id="flexRadioDefault1">
    <label class="form-check-label" for="flexRadioDefault1">
    @Html.DisplayFor(modelItem => item.Answer1)
    </label>
</div>
<div class="form-check2">
    <input onclick="clickedradio()" class="form-check-input" type="radio" name="@item.Question" id="flexRadioDefault2">
    <label class="form-check-label" for="flexRadioDefault2">
    @Html.DisplayFor(modelItem => item.Answer2)
    </label>
</div>
<div class="form-check3">
    <input onclick="clickedradio()" class="form-check-input" type="radio" name="@item.Question" id="flexRadioDefault3">
    <label class="form-check-label" for="flexRadioDefault3">
    <h2 class="Result visually-hidden">Your Result is @Html.DisplayFor(modelItem => item.Score)</h2>
    @Html.DisplayFor(modelItem => item.Answer3)
    </label>
</div>
<div class="form-check4">
    <input onclick="clickedradio()" class="form-check-input" type="radio" name="@item.Question" id="flexRadioDefault4">
    <label class="form-check-label" for="flexRadioDefault4">
    @Html.DisplayFor(modelItem => item.Answer4)
    </label>
</div>
<div class="form-check5">
    <input onclick="clickedradio()" class="form-check-input" type="radio" name="@item.Question" id="flexRadioDefault5">
    <label class="form-check-label" for="flexRadioDefault5">
    @Html.DisplayFor(modelItem => item.Answer5)
    </label>
</div>
    </div>
}
<div class="form-group button">
    <a type="button" onclick="validateForm(); checkCorrectAnswer();" class="btn">Show Score</a>
</div>
    </form>

<script>
function validateForm() {
        var form = document.querySelector('.quiz-form');
        var radioGroups = form.querySelectorAll('.answers [type="radio"]');
        var valid = true;

        radioGroups.forEach(function (radio) {
            var groupName = radio.getAttribute('name');
            var groupChecked = form.querySelector('input[name="' + groupName + '"]:checked');

            if (!groupChecked && valid) {
                valid = false;
            }
        });
        if (!valid) {
            alert('Please answer all questions.');
        } else {
            form.submit();
        }
    }


function checkCorrectAnswer(){
let correctAnswer = document.getElementById("flexRadioDefault3")
if(correctAnswer.checked){
    let string = document.querySelectorAll(".Result");
    let sum = 0;
    string.forEach(function(elment, index){
    let current = elment.innerHTML;
    let lastString = current[current.length-1]
    let score = parseInt(lastString, 10)
    sum += score;
    });
    sessionStorage.setItem("score", sum)
}else{
    
}
}
</script>
